buildscript {
	ext {
		ext.springBootVersion = '2.1.2.RELEASE'
		ext.postgresqlDriverVersion = '42.1.4'
		ext.h2DatabaseVersion = '1.4.197'
		ext.asciidoctorVersion = '1.5.8'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
		classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'docker'

asciidoctor {
	dependsOn test
	outputDir file('build/docs')
	sourceDir 'src/rest-docs'
	sources {
		include 'index.adoc'
	}
	options doctype: 'book'
	attributes \
      'snippets': file('build/generated-snippets')
}

bootJar {
	dependsOn asciidoctor
}

assemble {
    dependsOn 'buildApplicationDockerImage', 'buildDocumentationDockerImage'
}

/**
 * Configuration docs available here @link https://github.com/Transmode/gradle-docker
 */
docker {
    useApi false
}

/**
 * Builds docker image, tags it as version number
 * and pushes it to hub.docker.com
 */
task buildApplicationDockerImage(type: Docker) {
	push = true
	tagVersion = 'latest'
    tag = "dressyourkid/${project.name}"
	dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from file("$project.buildDir/libs")
            into stageDir
        }
    }
}
/**
 * Builds docker image, tags it as version number
 * and pushes it to hub.docker.com
 */
task buildDocumentationDockerImage(type: Docker) {
	push = true
	tagVersion = 'latest'
	tag = "dressyourkid/${project.name}-api-docs"
	dockerfile = file('src/rest-docs/Dockerfile')
	doFirst {
		copy {
			from file("src/rest-docs/nginx-conf")
			into "$stageDir/rest-docs/nginx-conf"
		}
		copy {
			from file("$project.buildDir/docs/html5")
			into "$stageDir/rest-docs/html"
		}
	}
}

group = 'ru.dressyourkid'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE')
	compile("org.postgresql:postgresql:$postgresqlDriverVersion")
	compile('com.cloudinary:cloudinary-http44:1.22.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile("com.h2database:h2:$h2DatabaseVersion")
}
